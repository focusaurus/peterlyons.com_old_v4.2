:markdown
  This page will chronicle my career in a more narrative and rich format than a standard resume can offer.

  I have a **[traditional resume availabe in PDF format](resume.pdf)** for those looking for the lo-fi version.

  <p class="reverse"><a id="reverse" href="#">Click to switch between chronological and reverse chronological order.</a></p>

.phase
  :markdown
    #Phase 4C: Web Developer at stealth mode startup

    I'm currently building the initial release of a new startup that is still in stealth mode.

    Dates: October 2012-Present
    ##Technologies Employed
    * JavaScript
    * node.js
    * express.js
    * handlebars.js
    * jQuery, REST, JSON
    * MongoDB, Redis, CouchDB

.phase
  :markdown
    #Phase 4B: Web Developer at Sococo

    I joined [Social Communications Company (Sococo)](http://sococo.com) in February 2012 as a web developer. Sococo makes a virtual office product and I worked on a rewrite of their PHP administrative web site as a modern backbone.js single page application. It was front-end heavy work with the vast majority of the interesting code being browser-side JavaScript.

    I joined for the express purpose of doing node.js development work, but the project I worked on was PHP/Backbone.js with the promise of node.js work to follow after that project completed. After 7 months of additional development taking a detour from my career's desired path, I had to throw in the towel and find a real node.js-based job.

    Dates: February 2012-September 2012
    ##Technologies Employed
    * JavaScript
    * backbone.js
    * jQuery, REST, JSON
    * PHP
    * node.js
    * Python Fabric Framework

.phase
  :markdown
    #Phase 4A: Web Developer and Start-Up Junkie

    After 6.5 years working on enterprise software, in January 2011 I quit my
    job with HP to work on building web applications and start-up businesses.

    Dates: January 2011-February 2012

    ##dojo4 Project Summary

    I worked with [dojo4](http://dojo4.com) building Ruby on Rails web applications

    ##Technologies Employed
    * Ruby on Rails
        * Rails 3.1 with asset pipeline
    * MongoDB
    * Mongoid ODM

    ##Key Skills Learned

    * MongoDB schemaless design. Data migrations and advanced queries with mongodb.
    * Use of presenter and conductor patterns

    ##Linkzie Project Summary

    You can check out a little pet project I built with Ruby on Rails and jQuery over at <a target="_blank" href="https://linkzie.com">linkzie.com: A Simple Bookmark Manager</a>. I built Linkzie start to finish based on a simple script I built to manage my bookmarks.  I did all the design, development, deployment, and maintenance.  This was my project to get up to date with modern web development techniques.  It is a single page application with heavy javascript interactions on the client side and a lightweight JSON/REST API back end.

    ##Technologies Employed

    * Ruby on Rails
    * CoffeeScript (I &hearts; CoffeeScript)
    * JavaScript
    * jQuery
    * jQuery UI
    * Jasmine
    * PostgreSQL
    * REST

    ##Key Skills Learned

    * Modern web development tools and techniques

.phase
  :markdown
    #Phase 3B: Software Engineer at Hewlett-Packard

    Dates: November 2007-January 2011

    HP acquired Opsware for $1.6 Billion in November 2007. My work and role as
    technical lead for OS provisioning continued on more or less the same as it
    was prior to the acquisition. I also led a major project to implement the HP
    Server Automation Solaris Patching feature and shepherded that from design
    to shipping.

    ##Project Summary

    * Led a large team to a successful re-architecture of the OS provisioning feature - slashing technical debt, reducing complexity, and providing an easier to use and more powerful feature with six times less code
    * Designed and implemented a best-in-class Solaris Patching feature based on my own professional services work while consulting at Opsware customers
    * Development lead for OS Provisioning and Solaris Patching features on the HP Server Automation product across multiple releases

    ##Technologies Employed

    * Python
    * Java
    * Jython
    * Bourne Shell
    * Linux
    * Solaris
    * Windows
    * DHCP
    * NFS
    * Samba
    * XML
    * JSON

    ##Key Skills Learned

    * Getting things done in a very large software development organization
    * leading large distributed teams (up to 15 engineers in 4 time zones)
    * Making well-reasoned trade-offs in product design and implementation
    * Designing features for rapid application development
    * Unit testing and system testing in complex distributed environments
    * Software Patent draft and application process. I am listed as an inventor on three pending patent applications.

.phase
  :markdown
    #Phase 3A: Software Engineer at Opsware

    Dates: June 2006-November 2007

    I changed roles and joined the main product engineering team at Opsware, focusing on our bare metal OS provisioning feature.  I soon moved into the technical lead role for this feature and began guiding the design and implementation.  There were several notable changes leading a team building enterprise software.  I now had several engineers working with me on projects, QA teams, documentation writers, and product managers to work with.  The release cycle was between 8 and 12 months or so, so it was long projects with a lot of detailed design work, planning and specification. The work was technically very detailed - diving into the guts of three major platform families (Windows, Linux, and Solaris) and supporting several major hardware architectures. There were also lots of open bugs in numerous prior releases to manage and somewhat frequent escalated customer support cases. Also this was my first exposure to a truly gigantic (millions of lines) code base with dozens of components in many languages.

    ##Project Summary

    * Maintained and improved a large, mature, and complex code base. This includes making careful trade-off decisions around product functionality, defect management, and quickly resolving top-priority customer escalations

    ##Technologies Employed

    * Python
    * Java
    * Jython
    * Bourne Shell
    * Linux
    * Solaris
    * Windows
    * DHCP
    * NFS
    * Samba

    ##Key Skills Learned

    * Planning for enterprise software release schedules
    * How to quickly resolve escalated customer issues, including remote hands-off troubleshooting

.phase
  :markdown
    #Phase 2B: Consultant at Opsware

    Dates: August 2004-June 2006

    Fearing spending my whole career as a Microsoft expert when in general I was not fond of Microsoft technology, I decided to take a job with a small software company called Opsware, Inc at the recommendation of a friend.  Opsware was selling data center automation software which at this point was still very new.  It was the vision of Internet pioneer <a href="http://en.wikipedia.org/wiki/Marc_Andreessen">Marc Andreessen</a>.  After Netscape, Marc founded LoudCloud which was a hosting provider focused on automation and scale-on-demand technology which they developed in-house.  In 2003 they pivoted, selling the hosting business to EDS and taking their software directly to market as Opsware, Inc.

    This was a very sudden and significant technology change for me.  I went from all Windows all the time to working at large-scale Unix/Linux heavy shops. Opsware professional services was comprised of entirely hard-core elite sysadmin/programmers, some having come over from Sun Microsystems professional services.  This was a very small team of only a handful of people responsible for all customers in the eastern US.  The stakes were high as Opsware was still very much a young and problematic enterprise software application, and it was up to professional services to fill in the gaps between what the customers' needs and expectations were and what the product could actually deliver.  We were also seen as sources of best practices for system administration by our clients, who were already often cutting-edge technologists interested in automation.  After spending 20 months doing Windows, they sat me down in front of 1500 Solaris servers at Comcast and said "sink or swim".  I swam.


    This job was a mix of consulting, systems administration, and custom software development, gradually shifting toward more and more software development with each new project.  We ended up writing large pieces of custom software for our customers in Java and Python.  My client focus was on the financial services customers on Wall Street and Exchange Place in Jersey City.  I spent time at many of the largest financial firms including JP Morgan Chase, Lehman Brothers, and Merrill Lynch.

    ##Project Summary

    * Technical lead for the Eastern US, providing best practices, guidance, procedures, and support to less experienced team members
    * Developed enhancements to meet the needs of large financial services clients. Enhanced Opsware's Solaris Patching capabilities for deeper automation. Created program to synchronize user accounts with an external LDAP directory. Developed new web GUIs for customer-specific enhancements.
    * Worked closely with customers to design, plan, and implement Opsware Server Automation System to automate management of complex, large-scale, heterogeneous, enterprise data centers
    * Provided troubleshooting, analysis, and technical expertise in high-pressure, escalated production problems
    * Successfully upgraded nearly every Opsware customer in the Eastern US. Used precision and careful, thorough planning to turn nightmare, disaster-prone on-site product upgrades into successes.

    ##Technologies Employed

    * Linux
    * Solaris
    * Python
    * Java
    * JSP
    * Struts
    * XML-RPC
    * Bourne Shell
    * DHCP

    ##Key Skills Learned

    * Consulting and technical leadership working on complex, high-value (7-figure) enterprise software sales and implementations
    * Unix/Linux systems administration
    * Python for systems automation
    * General exposure to enterprise software sales
    * Writing for technical documentation
    * Road Warrior Kung-Fu

.phase
  :markdown
    #Phase 2A: Consultant at Accenture Technology Solutions

    Dates: November 2002-August 2004

    In the tough economy after 9/11, I took a position at a new subsidiary of <a href="http://www.accenture.com/">Accenture</a> called <a href="http://www.linkedin.com/company/accenture-technology-solutions">Accenture Technology Solutions</a> (ATS).  ATS was formed to add more technical depth to Accenture's staff of consultants.  Here I got exposure to large enterprises and became a jack-of-all-trades technologist.  We were building projects on the Microsoft platform.  I got to spend time both programming new applications as well as building the data center cages where we hosted the applications from scratch.  I learned networking in detail and became a Cisco Certified Network Associate (CCNA) and got to configure Cisco switches and routers.  I became heavily involved in projects to the level where I would assist with selecting and purchasing equipment (racks, servers, cables, switches), physically racking, stacking, and cabling it in the data center, installing the operating systems (using automation scripts I had written), installing and configuring MS Exchage Server, Active Directory, and ISA Server, configuring the switches and networking topology, and coordinating with the data center staff on our Internet connection and firewall rules.  I also helped provision and configure a dedicated T1 line we used for administrative access out of band from our office to the data center.

    I got exposure to large, complex, high-budget (8-figure) projects and the logistics of navigating that.  My primary client during this period was AT&amp;T and I was also involved with Payless Shoes and Jelly Belly Candy Company.

    ##Project Summary

    * Responsible for planning, design, implementation, and operation of multiple carrier-class highly- available computer networks involving dozens of servers, layer 2 and 3 network switches and routers, fiber channel SAN systems, firewalls, load balancers, SSL accelerators, and tape backup
    * Designed and implemented enterprise-class software solutions using Microsoft Active Directory, DNS, Exchange Server, Microsoft Operations Manager, IIS, SQL Server, ISA Server, Commerce Server
    * Developed an end user self-provisioning portal for a Hosted Exchange solution including database schema design, T-SQL stored procedures, object-oriented business logic classes, an abstract reusable superclass for persistent business objects, transaction processing across multiple databases, LDAP directories, and web services, a robust exception handling and logging system, and web presentation layer in ASP.NET
    * Served as key resource in troubleshooting and resolving difficult problems in both functionality and performance in heterogeneous network environments
    * Quickly learned a vast array of cutting edge hardware and software technology from a wide range of vendors

    ##Technologies Employed

    * Windows Server 2003
    * ASP.NET
    * MS SQL Server
    * MS Exchange Server
    * Active Directory
    * MS ISA Server
    * Cisco IOS
    * VBScript
    * DNS
    * SMTP
    * IBM eServers

    ##Key Skills Learned

    * Consulting and working with global enterprises on complex projects
    * Full stack process from ordering equipment through go live through operations
    * TCP/IP networking and firewalling
    * General exposure to the Microsoft stack

.phase
  :markdown
    #Phase 1: Web Development

    Dates: August 2001-September 2002

    My first full-time job straight out of college was at a boutique web development
    consultancy in NYC called <a href="http://codefab.com/">CodeFab</a>. This was a
    small (approx 20 employees at its largest) shop formed by a core group of old
    die-hard NeXTSTEP/OpenStep enthusiasts. We built database-driven web
    applications on the <a href="http://www.apple.com/ca/webobjects/">Apple
    WebObjects</a> platform. We used the <a
    href="http://www.extremeprogramming.org/">Extreme Programming</a> methodology
    which involes full-time <a
    href="http://en.wikipedia.org/wiki/Pair_programming">pair programming</a>. This
    pairing afforded me a great opportunity to learn from many veteran developers,
    many of whom are now working at Apple. We were also heavily invested in unit
    testing and <a href="http://en.wikipedia.org/wiki/Test-driven_development">Test
    Driven Development (TDD)</a>. Thus I learned early on what solid, well-tested
    code looks and feels like.

    Sadly, CodeFab's consulting business did not survive the post-9/11 economy and
    they had to close up shop for a while, later re-emerging with a focus on
    iPhone/iPad and mobile development.

    I should also note that at this time I started to learn Python on the side,
    taking a cue from my boss <a
    href="http://www.linkedin.com/profile/view?id=12829">Bill Bumgarner</a>. This
    turned out to be a key language two jobs later at Opsware.

    ##Project Summary

    * Developed and maintained numerous sophisticated database driven web applications including a real-time trading system
    * Integrated diverse technologies such as email (JavaMail), LDAP directories (JNDI), XML-RPC, and WebDAV
    * Created transparent, on-the-fly database upgrade system that significantly reduced the downtime, risk and complexity of updating production software. This design was later written up in StepWise and is now common in application frameworks such as Ruby on Rails, but this was in 2002!
    * Designed, developed, and integrated centralized, single sign-on authentication system that allowed employees to use multiple web applications without needing to reauthenticate
    * Maintained internal and external company web sites; redesigned and updated external web site for better standards compliance, browser compatibility and easier access to current information
    * Created simple content management system to facilitate updating news section of the web site

    ##Technologies Employed

    * Java
    * Apple WebObjects/EnterpriseObjects
    * HTML
    * CSS
    * SQL
    * Mac OS X
    * FreeBSD
    * Perl
    * LDAP
    * FrontBase
    * XML-RPC

    ##Key Skills Learned

    * Unit Testing and Test Driven Development (TDD)
    * Extreme Programming (XP)
    * Object-Relational Modeling (ORM)
    * Apple Core Foundation APIs

:coffeescript
  $ ->
   $("#reverse").click ->
        phases = []
        parent = $("div.phase").parent()
        $("div.phase").each (index, div) ->
          $(div).remove()
          phases.unshift $(div)
        #Make a single change to the live DOM to avoid flickers
        tempNode = $ "<div>"
        tempNode.append phase for phase in phases
        parent.append tempNode.html()
